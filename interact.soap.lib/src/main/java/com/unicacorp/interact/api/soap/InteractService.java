
package com.unicacorp.interact.api.soap;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "InteractService", targetNamespace = "http://soap.api.interact.unicacorp.com", wsdlLocation = "centilliard.io.fipm/wsdl/InteractService.wsdl")
public class InteractService   extends Service
{

    private final static URL INTERACTSERVICE_WSDL_LOCATION;
    private final static WebServiceException INTERACTSERVICE_EXCEPTION;
    private final static QName INTERACTSERVICE_QNAME = new QName("http://soap.api.interact.unicacorp.com", "InteractService");
    
    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:centilliard.io.fipm/wsdl/InteractService.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        INTERACTSERVICE_WSDL_LOCATION = url;
        INTERACTSERVICE_EXCEPTION = e;
    }

    public InteractService() {
        super(__getWsdlLocation(), INTERACTSERVICE_QNAME);
    }

    public InteractService(WebServiceFeature... features) {
        super(__getWsdlLocation(), INTERACTSERVICE_QNAME, features);
    }

    public InteractService(URL wsdlLocation) {    	
        super(wsdlLocation, INTERACTSERVICE_QNAME);
        
    }

    public InteractService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, INTERACTSERVICE_QNAME, features);
    }

    public InteractService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public InteractService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns InteractSoapServicePortType
     */
   @WebEndpoint(name = "InteractSoapServiceHttpSoap11Endpoint")
    public InteractSoapServicePortType getInteractSoapServiceHttpSoap11Endpoint() {
        return super.getPort(new QName("http://soap.api.interact.unicacorp.com", "InteractSoapServiceHttpSoap11Endpoint"), InteractSoapServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns InteractSoapServicePortType
     */
   @WebEndpoint(name = "InteractSoapServiceHttpSoap11Endpoint")
    public InteractSoapServicePortType getInteractSoapServiceHttpSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(new QName("http://soap.api.interact.unicacorp.com", "InteractSoapServiceHttpSoap11Endpoint"), InteractSoapServicePortType.class, features);
    }

    /**
     * 
     * @return
     *     returns InteractSoapServicePortType
     */
    @WebEndpoint(name = "InteractSoapServiceHttpSoap12Endpoint")
    public InteractSoapServicePortType getInteractSoapServiceHttpSoap12Endpoint() {
        return super.getPort(new QName("http://soap.api.interact.unicacorp.com", "InteractSoapServiceHttpSoap12Endpoint"), InteractSoapServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns InteractSoapServicePortType
     */
    @WebEndpoint(name = "InteractSoapServiceHttpSoap12Endpoint")
    public InteractSoapServicePortType getInteractSoapServiceHttpSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(new QName("http://soap.api.interact.unicacorp.com", "InteractSoapServiceHttpSoap12Endpoint"), InteractSoapServicePortType.class, features);
    }

    /**
     * 
     * @return
     *     returns InteractSoapServicePortType
     */
    @WebEndpoint(name = "InteractSoapServiceHttpEndpoint")
    public InteractSoapServicePortType getInteractSoapServiceHttpEndpoint() {
        return super.getPort(new QName("http://soap.api.interact.unicacorp.com", "InteractSoapServiceHttpEndpoint"), InteractSoapServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns InteractSoapServicePortType
     */
   @WebEndpoint(name = "InteractSoapServiceHttpEndpoint")
    public InteractSoapServicePortType getInteractSoapServiceHttpEndpoint(WebServiceFeature... features) {
        return super.getPort(new QName("http://soap.api.interact.unicacorp.com", "InteractSoapServiceHttpEndpoint"), InteractSoapServicePortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (INTERACTSERVICE_EXCEPTION!= null) {
            throw INTERACTSERVICE_EXCEPTION;
        }
        return INTERACTSERVICE_WSDL_LOCATION;
    }

}
